
package it.csi.cosmo.cosmosoap.integration.soap.acta.officialbook;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import it.doqui.acta.acaris.common.ChangeTokenType;
import it.doqui.acta.acaris.common.NavigationConditionInfoType;
import it.doqui.acta.acaris.common.ObjectIdType;
import it.doqui.acta.acaris.common.ObjectResponseType;
import it.doqui.acta.acaris.common.PagingResponseType;
import it.doqui.acta.acaris.common.PrincipalIdType;
import it.doqui.acta.acaris.common.PropertiesType;
import it.doqui.acta.acaris.common.PropertyFilterType;
import it.doqui.acta.acaris.common.PropertyType;
import it.doqui.acta.acaris.common.QueryConditionType;
import it.doqui.acta.acaris.common.QueryableObjectType;
import it.doqui.acta.acaris.common.SimpleResponseType;
import it.doqui.acta.acaris.officialbookservice.EnumTipoRegistrazioneDaCreare;
import it.doqui.acta.acaris.officialbookservice.EnumTipologiaTargetAnnotazioneOB;
import it.doqui.acta.acaris.officialbookservice.IdentificazioneAnnotazioneOB;
import it.doqui.acta.acaris.officialbookservice.IdentificazioneRegistrazione;
import it.doqui.acta.acaris.officialbookservice.InfoDestinatarioIS;
import it.doqui.acta.acaris.officialbookservice.InfoMittenteIS;
import it.doqui.acta.acaris.officialbookservice.InfoRegistrazione;
import it.doqui.acta.acaris.officialbookservice.RegistrazioneRequest;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "OfficialBookServicePort", targetNamespace = "officialbookservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    it.doqui.acta.acaris.common.ObjectFactory.class,
    it.doqui.acta.acaris.officialbookservice.ObjectFactory.class,
    it.doqui.acta.acaris.common.prt.ObjectFactory.class
})
public interface OfficialBookServicePort {


    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param tipologiaCreazione
     * @param infoRichiestaCreazione
     * @return
     *     returns it.doqui.acta.acaris.officialbookservice.IdentificazioneRegistrazione
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "identificazioneCreazione", targetNamespace = "")
    @RequestWrapper(localName = "creaRegistrazione", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.CreaRegistrazione")
    @ResponseWrapper(localName = "creaRegistrazioneResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.CreaRegistrazioneResponse")
    public IdentificazioneRegistrazione creaRegistrazione(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "tipologiaCreazione", targetNamespace = "")
        EnumTipoRegistrazioneDaCreare tipologiaCreazione,
        @WebParam(name = "infoRichiestaCreazione", targetNamespace = "")
        RegistrazioneRequest infoRichiestaCreazione)
        throws AcarisException
    ;

    /**
     * 
     * @param classificazioneId
     * @param senzaCreazioneSoggetti
     * @param repositoryId
     * @param infoRegistrazione
     * @param principalId
     * @param registroId
     * @return
     *     returns it.doqui.acta.acaris.officialbookservice.IdentificazioneRegistrazione
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "identificazioneCreazione", targetNamespace = "")
    @RequestWrapper(localName = "importaRegistrazione", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.ImportaRegistrazione")
    @ResponseWrapper(localName = "importaRegistrazioneResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.ImportaRegistrazioneResponse")
    public IdentificazioneRegistrazione importaRegistrazione(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "classificazioneId", targetNamespace = "")
        ObjectIdType classificazioneId,
        @WebParam(name = "registroId", targetNamespace = "")
        ObjectIdType registroId,
        @WebParam(name = "infoRegistrazione", targetNamespace = "")
        InfoRegistrazione infoRegistrazione,
        @WebParam(name = "senzaCreazioneSoggetti", targetNamespace = "")
        boolean senzaCreazioneSoggetti)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param anno
     * @param aooId
     * @param repositoryId
     * @param principalId
     * @return
     *     returns it.doqui.acta.acaris.common.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getRegistries", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.GetRegistries")
    @ResponseWrapper(localName = "getRegistriesResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.GetRegistriesResponse")
    public PagingResponseType getRegistries(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "aooId", targetNamespace = "")
        ObjectIdType aooId,
        @WebParam(name = "anno", targetNamespace = "")
        Integer anno,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param repositoryId
     * @param principalId
     * @param objectId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getProperties", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.GetProperties")
    @ResponseWrapper(localName = "getPropertiesResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.GetPropertiesResponse")
    public ObjectResponseType getProperties(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param changeToken
     * @param objectId
     * @param properties
     * @return
     *     returns it.doqui.acta.acaris.common.SimpleResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "response", targetNamespace = "")
    @RequestWrapper(localName = "updateProperties", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.UpdateProperties")
    @ResponseWrapper(localName = "updatePropertiesResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.UpdatePropertiesResponse")
    public SimpleResponseType updateProperties(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "objectId", targetNamespace = "")
        ObjectIdType objectId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "changeToken", targetNamespace = "")
        ChangeTokenType changeToken,
        @WebParam(name = "properties", targetNamespace = "")
        List<PropertyType> properties)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param maxItems
     * @param navigationLimits
     * @param criteria
     * @param repositoryId
     * @param principalId
     * @param skipCount
     * @param target
     * @return
     *     returns it.doqui.acta.acaris.common.PagingResponseType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "query", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.Query")
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.QueryResponse")
    public PagingResponseType query(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "target", targetNamespace = "")
        QueryableObjectType target,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter,
        @WebParam(name = "criteria", targetNamespace = "")
        List<QueryConditionType> criteria,
        @WebParam(name = "navigationLimits", targetNamespace = "")
        NavigationConditionInfoType navigationLimits,
        @WebParam(name = "maxItems", targetNamespace = "")
        Integer maxItems,
        @WebParam(name = "skipCount", targetNamespace = "")
        Integer skipCount)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param identifiers
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.common.ObjectResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getPropertiesMassive", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassive")
    @ResponseWrapper(localName = "getPropertiesMassiveResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassiveResponse")
    public List<ObjectResponseType> getPropertiesMassive(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "identifiers", targetNamespace = "")
        List<ObjectIdType> identifiers,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param tipologiaTarget
     * @param properties
     * @param target
     * @return
     *     returns it.doqui.acta.acaris.officialbookservice.IdentificazioneAnnotazioneOB
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "identificazioneCreazione", targetNamespace = "")
    @RequestWrapper(localName = "creaAnnotazioneOB", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.CreaAnnotazioneOB")
    @ResponseWrapper(localName = "creaAnnotazioneOBResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.CreaAnnotazioneOBResponse")
    public IdentificazioneAnnotazioneOB creaAnnotazioneOB(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "target", targetNamespace = "")
        ObjectIdType target,
        @WebParam(name = "tipologiaTarget", targetNamespace = "")
        EnumTipologiaTargetAnnotazioneOB tipologiaTarget,
        @WebParam(name = "properties", targetNamespace = "")
        PropertiesType properties)
        throws AcarisException
    ;

    /**
     * 
     * @param mittente
     * @param identitaDigitale
     * @param repositoryId
     * @param destinatari
     * @param identificatoreRegistraizone
     * @param principalId
     * @param origine
     * @throws AcarisException
     */
    @WebMethod
    @RequestWrapper(localName = "inviaSegnatura", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.InviaSegnatura")
    @ResponseWrapper(localName = "inviaSegnaturaResponse", targetNamespace = "officialbookservice.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.officialbookservice.InviaSegnaturaResponse")
    public void inviaSegnatura(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "origine", targetNamespace = "")
        String origine,
        @WebParam(name = "identificatoreRegistraizone", targetNamespace = "")
        ObjectIdType identificatoreRegistraizone,
        @WebParam(name = "mittente", targetNamespace = "")
        InfoMittenteIS mittente,
        @WebParam(name = "destinatari", targetNamespace = "")
        List<InfoDestinatarioIS> destinatari,
        @WebParam(name = "identitaDigitale", targetNamespace = "")
        String identitaDigitale)
        throws AcarisException
    ;

}
