
package it.csi.cosmo.cosmosoap.integration.soap.acta.document;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import it.doqui.acta.acaris.archive.EnumDocumentObjectType;
import it.doqui.acta.acaris.archive.EnumFolderObjectType;
import it.doqui.acta.acaris.common.AcarisContentStreamType;
import it.doqui.acta.acaris.common.ObjectIdType;
import it.doqui.acta.acaris.common.ObjectResponseType;
import it.doqui.acta.acaris.common.PrincipalIdType;
import it.doqui.acta.acaris.common.PropertiesType;
import it.doqui.acta.acaris.common.PropertyFilterType;
import it.doqui.acta.acaris.documentservice.DocumentoFisicoIRC;
import it.doqui.acta.acaris.documentservice.EnumTipoOperazione;
import it.doqui.acta.acaris.documentservice.IdentificatoreDocumento;
import it.doqui.acta.acaris.documentservice.IdentificazioneTrasformazione;
import it.doqui.acta.acaris.documentservice.InfoRichiestaCreazione;
import it.doqui.acta.acaris.documentservice.InfoRichiestaTrasformazione;
import it.doqui.acta.acaris.documentservice.MappaIdentificazioneDocumento;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DocumentServicePort", targetNamespace = "documentservice.acaris.acta.doqui.it")
@XmlSeeAlso({
    it.doqui.acta.acaris.archive.ObjectFactory.class,
    it.doqui.acta.acaris.common.ObjectFactory.class,
    it.doqui.acta.acaris.document.ObjectFactory.class,
    it.doqui.acta.acaris.documentservice.ObjectFactory.class
})
public interface DocumentServicePort {


    /**
     * 
     * @param repositoryId
     * @param principalId
     * @param datiCreazione
     * @param tipoOperazione
     * @return
     *     returns it.doqui.acta.acaris.documentservice.IdentificatoreDocumento
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "info", targetNamespace = "")
    @RequestWrapper(localName = "creaDocumento", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.CreaDocumento")
    @ResponseWrapper(localName = "creaDocumentoResponse", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.CreaDocumentoResponse")
    public IdentificatoreDocumento creaDocumento(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "tipoOperazione", targetNamespace = "")
        EnumTipoOperazione tipoOperazione,
        @WebParam(name = "datiCreazione", targetNamespace = "")
        InfoRichiestaCreazione datiCreazione)
        throws AcarisException
    ;

    /**
     * 
     * @param puntoDiPartenza
     * @param repositoryId
     * @param recuperaAscendenza
     * @param principalId
     * @return
     *     returns it.doqui.acta.acaris.documentservice.MappaIdentificazioneDocumento
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "info", targetNamespace = "")
    @RequestWrapper(localName = "getRappresentazioneDocumento", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.GetRappresentazioneDocumento")
    @ResponseWrapper(localName = "getRappresentazioneDocumentoResponse", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.GetRappresentazioneDocumentoResponse")
    public MappaIdentificazioneDocumento getRappresentazioneDocumento(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "puntoDiPartenza", targetNamespace = "")
        IdentificatoreDocumento puntoDiPartenza,
        @WebParam(name = "recuperaAscendenza", targetNamespace = "")
        boolean recuperaAscendenza)
        throws AcarisException
    ;

    /**
     * 
     * @param registrazioneId
     * @param infoRichiesta
     * @param documentoFisico
     * @param classificazioneId
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.documentservice.IdentificazioneTrasformazione>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "trasformazione", targetNamespace = "")
    @RequestWrapper(localName = "trasformaDocumentoPlaceholderInDocumentoElettronico", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.TrasformaDocumentoPlaceholderInDocumentoElettronico")
    @ResponseWrapper(localName = "trasformaDocumentoPlaceholderInDocumentoElettronicoResponse", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.TrasformaDocumentoPlaceholderInDocumentoElettronicoResponse")
    public List<IdentificazioneTrasformazione> trasformaDocumentoPlaceholderInDocumentoElettronico(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "classificazioneId", targetNamespace = "")
        ObjectIdType classificazioneId,
        @WebParam(name = "registrazioneId", targetNamespace = "")
        ObjectIdType registrazioneId,
        @WebParam(name = "infoRichiesta", targetNamespace = "")
        InfoRichiestaTrasformazione infoRichiesta,
        @WebParam(name = "documentoFisico", targetNamespace = "")
        List<DocumentoFisicoIRC> documentoFisico)
        throws AcarisException
    ;

    /**
     * 
     * @param filter
     * @param identifiers
     * @param repositoryId
     * @param principalId
     * @return
     *     returns java.util.List<it.doqui.acta.acaris.common.ObjectResponseType>
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "object", targetNamespace = "")
    @RequestWrapper(localName = "getPropertiesMassive", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassive")
    @ResponseWrapper(localName = "getPropertiesMassiveResponse", targetNamespace = "common.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.common.GetPropertiesMassiveResponse")
    public List<ObjectResponseType> getPropertiesMassive(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "identifiers", targetNamespace = "")
        List<ObjectIdType> identifiers,
        @WebParam(name = "filter", targetNamespace = "")
        PropertyFilterType filter)
        throws AcarisException
    ;

    /**
     * 
     * @param contentStream
     * @param repositoryId
     * @param associativeObjectTypeId
     * @param associativeObjectProperties
     * @param typeId
     * @param principalId
     * @param properties
     * @param folderId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "")
    @RequestWrapper(localName = "creaDocumentoFisicoInDocumentRoot", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.CreaDocumentoFisicoInDocumentRoot")
    @ResponseWrapper(localName = "creaDocumentoFisicoInDocumentRootResponse", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.CreaDocumentoFisicoInDocumentRootResponse")
    public ObjectIdType creaDocumentoFisicoInDocumentRoot(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "typeId", targetNamespace = "")
        EnumDocumentObjectType typeId,
        @WebParam(name = "associativeObjectTypeId", targetNamespace = "")
        EnumFolderObjectType associativeObjectTypeId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "properties", targetNamespace = "")
        PropertiesType properties,
        @WebParam(name = "associativeObjectProperties", targetNamespace = "")
        PropertiesType associativeObjectProperties,
        @WebParam(name = "folderId", targetNamespace = "")
        ObjectIdType folderId,
        @WebParam(name = "contentStream", targetNamespace = "")
        AcarisContentStreamType contentStream)
        throws AcarisException
    ;

    /**
     * 
     * @param contFisico
     * @param repositoryId
     * @param principalId
     * @return
     *     returns it.doqui.acta.acaris.common.ObjectIdType
     * @throws AcarisException
     */
    @WebMethod
    @WebResult(name = "objectId", targetNamespace = "")
    @RequestWrapper(localName = "uploadContenutoFisico", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.UploadContenutoFisico")
    @ResponseWrapper(localName = "uploadContenutoFisicoResponse", targetNamespace = "document.acaris.acta.doqui.it", className = "it.doqui.acta.acaris.document.UploadContenutoFisicoResponse")
    public ObjectIdType uploadContenutoFisico(
        @WebParam(name = "repositoryId", targetNamespace = "")
        ObjectIdType repositoryId,
        @WebParam(name = "principalId", targetNamespace = "")
        PrincipalIdType principalId,
        @WebParam(name = "contFisico", targetNamespace = "")
        AcarisContentStreamType contFisico)
        throws AcarisException
    ;

}
